.. _rm-relational-database-connection-strings:

======================================
Relational Database Connection Strings
======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. include:: /includes/uri-usage-disclaimer.rst

To analyze a schema or start a migration job, Relational Migrator must connect
to your relational database. To connect to your source database,
Relational Migrator requires a JDBC-formatted connection string. This document
describes the URI formats for defining connections to relational
database systems.

Relational Migrator can connect to the following relational database systems:

- `MySQL <#mysql>`__
- `Oracle <#oracle>`__
- `PostgreSQL <#postgresql>`__
- `SQL Server <#sql-server>`__
- `Sybase ASE <#sybase-ase>`__
- `DB2 <#db2>`__

Relational Migrator's connection form contains fields where you can specify a
username and password for the connection. The form obscures passwords
and is more secure than specifying plaintext credentials in the URI.

.. _rm-mysql-connection-string:

MySQL
-----

The general form for a MySQL connection string is:

.. code-block::

   jdbc:mysql://<host:port>/<database>?<properties>

For example, consider the following connection string:

.. code-block::

   jdbc:mysql://host1:3306/test

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``host1``
   * - Port
     - ``3306``
   * - Database
     - ``test``

.. note::

   To learn more about MySQL connection strings, see:

   - `MySQL Connection URL Syntax <https://dev.mysql.com/doc/connector-j/en/connector-j-reference-jdbc-url-format.html>`__
   - `Connection Configuration Properties <https://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html>`__

.. _rm-oracle-connection-string:

Oracle
------

The general form for an Oracle connection string is:

.. code-block::

   jdbc:oracle:thin:@<host:port>:SID

For example, consider the following connection string:

.. code-block::

   jdbc:oracle:thin:@prodHost:1521:ORCL

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``prodHost``
   * - Port
     - ``1521``
   * - SID (System Identifier)
     - ``ORCL``

.. note::

   To learn more about Oracle connection strings, see:

   - `Oracle JDBC Developer's Guide and Reference <https://docs.oracle.com/en/database/oracle/oracle-database/23/jjdbc/JDBC-Thin-features.html>`__
   - `Connection String Attributes <https://docs.oracle.com/cd/E85694_01/ODPNT/ConnectionConnectionString.htm#GUID-DF4ED9A3-1AAF-445D-AEEF-016E6CD5A0C0__BABBAGJJ>`__
   
.. _rm-postgresql-connection-string:

PostgreSQL
----------

The general form for a PostgreSQL connection string is:

.. code-block::

   jdbc:postgresql://<host:port>/<database>?<properties>

For example, consider the following connection string:

.. code-block::

   jdbc:postgresql://localhost:5432/pg-demo

The preceding connection string specifies these connection details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``localhost``
   * - Port
     - ``5432``
   * - Database
     - ``pg-demo`` 

.. note::

   To learn more about PostgreSQL connection strings, see:

   - `PostgreSQL Connection Configuration Properties <https://jdbc.postgresql.org/documentation/use/>`__

.. _rm-sql-connection-string:

SQL Server
----------

The general form for a SQL Server connection string is:

.. code-block::

   jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]

For example, consider the following connection string:

.. code-block::

   jdbc:sqlserver://localhost:1433;databaseName=test

The preceding connection string specifies these connection details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``localhost``
   * - Port
     - ``1433``
   * - databaseName
     - ``test``

**Using Windows Integrated Authentication**

To enable Windows Integrated Authentication, add ``integratedSecurity=true;`` to the URI options.
Leave the :guilabel:`Username` and :guilabel:`Password` fields blank. Windows Integrated Authentication connects 
to the database using the credentials of the user who launched the Relational Migrator executable.

**Using TLS**

JDBC connections to SQL Server use Transport Layer Security (TLS) by default.
The encrypt property controls TLS. To disable it, set ``encrypt=false;``.
When TLS is enabled, the driver tries to validate the server's certificate by default.
To implicitly trust the server certificate, set ``trustServerCertificate=true;``.

.. note::

   To learn more about SQL Server connection strings, see:

   - `Setting Connection Properties <https://learn.microsoft.com/en-us/sql/connect/jdbc/setting-the-connection-properties>`__
   - `SQL Docs: Building the Connection URL <https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15>`__.
   - `Connecting to SQL Server with the JDBC Driver <https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-ver15>`__

databaseName Property Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In a SQL Server connection string, use the ``databaseName`` property to
specify the database to connect to. If you omit the ``databaseName``
property, the connection still succeeds but you can only see objects in
the default ``dbo`` schema in all databases.

If you specify the ``databaseName`` property, you can see tables from
all schemas within the specified database.

.. _rm-sybase-connection-string:

Sybase ASE
----------

The general form for a Sybase ASE connection string is:

.. code-block::

   jdbc:jtds:sybase://[host]:[port]/[databaseName]

.. note::

   To learn more about Sybase ASE connection strings, see:

   - `Sybase ASE Connection String Docs <https://infocenter.sybase.com/help/index.jsp?topic=/com.sybase.infocenter.dc01776.1601/doc/html/san1357754914053.html>`__
   - `ConnectionStrings.com <https://www.connectionstrings.com/sybase-adaptive/>`__

.. _rm-db2-connection-string:

DB2
---

The general form for a DB2 connection string is:

.. code-block::

   jdbc:db2://<hostname>:<port>/<database>;

For example, consider the following connection string:

.. code-block::

   jdbc:db2://localhost:50000/mydb2database;

The preceding connection string specifies these connection
details:

.. list-table::
   :header-rows: 1

   * - Property
     - Value
   * - Host
     - ``localhost``
   * - Port
     - ``50000``
   * - Database
     - ``mydb2database``

.. note::

   To learn more about DB2 connection strings, see:

   - `DB2 Connection URL Syntax <https://www.ibm.com/docs/en/db2woc?topic=programmatically-jdbc>`__
   - `Connection Configuration Properties <https://www.ibm.com/docs/en/db2/11.5?topic=SSEPGG_11.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052342.htm>`__
