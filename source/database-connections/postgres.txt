.. _rm-connect-to-postgres:

=====================
Connect to PostgreSQL
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. |db-type| replace:: PostgreSQL
.. |a-db| replace:: a PostgreSQL

.. include:: /includes/database-connections/connect-to-db-intro.rst

.. important::

   If PostgreSQL is configured as a cluster, Relational Migrator must connect 
   to the master server.

Steps
-----

.. _rm-prepare-db-postgres:
.. _rm-prereq-postgres:

Prepare the Database
~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/database-connections/prepare-the-database-intro.rst

.. tabs::

   .. tab:: Snapshot Jobs
      :tabid: enable-snapshot-jobs

      For snapshot jobs against PostgreSQL, the service account requires
      schema ``USAGE`` and table ``SELECT`` permissions.

      .. code-block:: sql
         :copyable: true

         GRANT USAGE ON SCHEMA <schema_name> TO <database_user_name>;
         GRANT SELECT ON TABLE <schema_name>.<table_name> TO <database_user_name>;

   .. tab:: Continuous Jobs
      :tabid: enable-continuous-jobs

      .. procedure::
         :style: normal

         For continuous jobs against PostgreSQL, you must enable 
         logical replication, grant role permissions to the service 
         account, and create a publication.

         .. step:: Enable logical replication 

            Logical replication may not be enabled by default. To enable logical 
            replication, change the `wal_level <https://postgresqlco.nf/doc/en/param/wal_level>`__ 
            configuration in the 
            `postgresql.conf configuration file <https://www.postgresql.org/docs/current/config-setting.html>`__. 
            You *must restart the database instance* after changing the configuration file. 

            .. code-block:: none

               wal_level = logical 

            If you are using PostgreSQL hosted on AWS RDS, you must 
            set the ``rds.logical_replication`` parameter to ``1``. 
            For details, see `Enable Logical Replication on AWS 
            <https://repost.aws/knowledge-center/rds-postgresql-use-logical-replication>`__.
            You *must restart the database instance* after setting the 
            parameter.

            .. tip::

               You can use the following query to check if your 
               AWS RDS instance has logical 
               replication enabled:

               .. code-block:: sql
                  :copyable: true

                  SELECT name,setting 
                  FROM pg_settings 
                  WHERE name IN ('wal_level','rds.logical_replication');

         .. step:: Create a SQL replication role

            a. Create a role with ``REPLICATION`` and ``LOGIN`` 
               database permissions:

               .. code-block:: sql

                  CREATE ROLE <role> REPLICATION LOGIN;

            #. Grant the table ``SELECT`` and schema ``USAGE``
               permissions to the role. Each table in
               the migration requires a ``GRANT SELECT`` statement:

               .. code-block:: sql
                  :copyable: true

                  GRANT USAGE ON SCHEMA <schema> TO <role>;
                  GRANT SELECT ON <schema>.<table> TO <role>;
                  -- ADDITIONAL GRANT SELECT STATEMENTS...

            #. Grant the role to the service account

               Replace ``<original_owner>`` with the owner of the 
               participating tables.

               .. code-block:: sql
                  :copyable: true

                  GRANT <role> TO <original_owner>;
                  GRANT <role> TO <database_user_name>;

         .. step:: Grant ownership of each table to the role
            
            Each table in the migration requires a ``ALTER TABLE`` 
            statement:

            .. code-block:: sql
               :copyable: true

               ALTER TABLE <schema>.<table> OWNER TO <role>;
               -- ADDITIONAL ALTER TABLE STATEMENTS...

         .. step:: Create a publication

            Create a `publication <https://www.postgresql.org/docs/current/logical-replication-publication.html>`__ 
            each table in the migration must be specified 
            in the ``FOR`` statement separated by commas:

            .. code-block:: sql
               :copyable: true

               CREATE PUBLICATION "MIGRATOR_<name>_PUBLICATION" 
               FOR TABLE "<schema>"."<table1>","<schema>"."<table2>"; 

         .. step:: Set replica identity to full

            Each table in the migration requires a ``ALTER TABLE`` 
            statement:

            .. code-block:: sql
               :copyable: true

               ALTER TABLE <schema>.<table> REPLICA IDENTITY FULL;
               -- ADDITIONAL ALTER TABLE STATEMENTS...

.. _rm-postgresql-connection-string:

Database Connection String
~~~~~~~~~~~~~~~~~~~~~~~~~~

The general form for a PostgreSQL connection string is:

.. code-block::

   jdbc:postgresql://<host:port>/<database>?<properties>

For example, the ``pg-demo`` PostgreSQL database running on ``localhost`` at 
port ``5432`` uses the following connection string:

.. code-block::

   jdbc:postgresql://localhost:5432/pg-demo

.. note::

   To learn more about PostgreSQL connection strings, see:

   - `PostgreSQL Connection Configuration Properties <https://jdbc.postgresql.org/documentation/use/>`__



.. _rm-save-postgres-connection:

Connect to |db-type|
~~~~~~~~~~~~~~~~~~~~
.. procedure::
   :style:  normal

   .. include:: /includes/database-connections/connect-to-db-steps-part-1.rst

   .. step:: To create a connection string by entering database information, enter the following:
      
      .. include:: /includes/table-postgresql-connection-fields.rst

   .. include:: /includes/database-connections/connect-to-db-steps-part-2.rst

Learn More
----------

- Relational Migrator relies on the open-source Debezium connector to 
  capture row-level changes. For more details, see
  `Debezium PostgreSQL <https://debezium.io/documentation/reference/stable/connectors/postgresql.html>`__.

.. include:: /includes/database-connections/connect-to-db-learn-more.rst