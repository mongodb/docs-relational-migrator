.. _rm-deployment-considerations:

=========================
Deployment Considerations
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

In the context of Relational Migrator, deployment considerations refers 
to where the servers, networking equipment, and databases are located. 
This page outlines location specific details to consider when using 
Relational Migrator.

How to Run Relational Migrator
------------------------------

The following table outlines high-level recommendations for how to 
run Relational Migrator. Also note that the 
:ref:`Kafka deployment model <kafka-intro>` provides greater 
resilience and scalability and can be used with any of the 
deployment options.

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - Use case 
     - Recommended environment

   * - Smaller scale or debugging and testing jobs that run for 
       less than four hours. 
     - Laptop / Desktop / Docker

   * - Larger scale production jobs that run for more than four 
       hours.
     - Remote server / EC2 / Azure VM

Where to Run Relational Migrator
--------------------------------

For best performance, locate the machine or server running Relational 
Migrator as geographically close to the source and target databases as 
possible. Proximity to the target database influences performance
the most: 

- If you're using Relational Migrator for an on-premises migration, 
  run Relational Migrator in the same data center as the source 
  database.

- If you're using a cloud hosted database, run Relational 
  Migrator on an EC2 instance or VM in the same 
  :abbr:`VPC (Virtual Private Cloud)` as the source database.

.. tip::

   Check the sleep timeout setting for your operating system. If your 
   machine goes to sleep during a migration, the migration job fails. 

Network Considerations
----------------------

When using Relational Migrator, the system firewall on the machine or 
server must allow outbound TCP traffic to both the source and 
destination databases.

Cloud Networking
~~~~~~~~~~~~~~~~

When running Relational Migrator in a cloud environment, check the 
cloud specific firewall (security group), router table, and 
the server firewall configurations. For details on specific cloud 
provider network configurations, see these pages:

- `AWS Networking <https://docs.aws.amazon.com/vpc/>`__
- `Azure Networking <https://azure.microsoft.com/en-us/products/category/networking>`__
- `GCP Networking <https://cloud.google.com/vpc/docs>`__

Telemetry
~~~~~~~~~

By default, Relational Migrator includes telemetry that reports usage 
information and errors back to MongoDB to help improve the product. 
This telemetry does not include any sensitive details such as database 
connection strings, schema information or customer data. 

You can disable telemetry by editing the application's
``user.properties`` file, adding the following line, and restarting 
Relational Migrator:

.. code-block::

   migrator.app.telemetry.enable: false 

System Hardware
---------------

For specific hardware recommendations, see :ref:`rm-system-requirements`.

.. note::

  Scaling up the Atlas cluster size can significantly improve migration
  speeds. For details, see :ref:`scale-cluster-instance`.

Get Started
-----------

For detailed installation instructions, see :ref:`installation`.
