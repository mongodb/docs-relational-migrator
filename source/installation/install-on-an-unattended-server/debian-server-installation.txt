.. _debian-install:

===========================
Debian Systems Installation
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can install Relational Migrator on a Debian server. This installation method 
allows Relational Migrator to run on an unattended server. By running on an 
unattended server, Relational Migrator binds to any IP and port on the server 
and is exposes it as a web application.

About this Task
---------------

Relational Migrator uses the following file locations on Debian Linux:

.. include:: /includes/fact-file-location-linux.rst

Steps
-----

.. _install-debian-server:

Install Relational Migrator
~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Download the latest ``.deb`` binary from the `release page <https://www.mongodb.com/try/download/relational-migrator>`__.

#. Update the system package manager repositories:

   .. code-block:: bash

      sudo apt update

#. (For headless Linux distributions) Create the required directories:

   .. code-block:: bash

      sudo mkdir /usr/share/desktop-directories/

#. Install Relational Migrator.

   .. code-block:: bash

      sudo apt install ./mongodb-relational-migrator_<version_number>-1_amd64.deb

#. (Optional) To connect to Oracle or MySQL drivers, download and place the drivers 
   into your Relational Migrator directory.

   a. To download and install MySQL or Oracle drivers, see the following:

      - `MySQL: latest 8.3.x version, Platform Independent Version <https://dev.mysql.com/downloads/connector/j/>`_

      - `Oracle: 21.6.0.0 of ojdbc11.jar from the Oracle 21c <https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html>`_

   b. Copy the driver files to ``/opt/mongodb-relational-migrator/lib/app/lib``.

      To copy the driver, use the following example: 

      .. code-block:: bash
      
         curl https://download.oracle.com/otn-pub/otn_software/jdbc/216/ojdbc11.jar -O -L -b -o

   For more information, see :ref:`Install on a Local Machine <local-machine-install>`.

#. Change the directory to the Relational Migrator ``/bin`` location and start the application.

   .. code-block:: bash

      cd /opt/mongodb-relational-migrator/bin

      ./mongodb-relational-migrator

#. Enable Relational Migrator to run as an unattended standalone server.

   In your ``user.properties`` file, uncomment ``spring.profiles.active: unattended``. 

#. (Optional) Update TLS/SSL configuration properties. 

   In your ``user.properties`` file, uncomment and update TLS/SSL configuration 
   properties.

   It is recommended that the unattended server installation is supplemented with 
   TLS/SSL configuration because Relational Migrator can be bound to any IP and port on 
   the server. For additional information, see `TLS/SSL Configuration Properties <https://docs.spring.io/spring-cloud-skipper/docs/2.8.4/reference/htmlsingle/#configuration-security-enabling-https>`__.

#. (Optional) Update the port that Relational Migrator runs on.

   By default, Relational Migrator is configured to run on port 8278. To change 
   the port Relational Migrator runs on (for example to port 80 for HTTP or port 443 for 
   HTTPS), update the ``server.port`` line in your ``user.properties`` file to specify 
   your preferred port.

#. Run Relational Migrator using the binary.

   The ``bin`` directory can typically be found at ``/opt/mongodb-relational-migrator/bin``.
   To run Relational Migrator using the binary, run the following:

   .. code-block:: bash

      cd /opt/mongodb-relational-migrator/bin

      ./mongodb-relational-migrator

#. (Optional) Check logs for errors or other information. 

   - The logs are located in ``~/Migrator/Logs/migrator.log``.

   - When running Relational Migrator as a system service, the path is under 
     the service userâ€™s home directory.

.. _debian-system-service:

Run as a System Service
~~~~~~~~~~~~~~~~~~~~~~~

When you install Relational Migrator on a Debian server, you can also set up 
Relational Migrator to run as a system service. By running Relational Migrator 
as a system service, Relational Migrator automatically starts when the server starts.

1. Create a ``/etc/systemd/system/migrator.service`` file. 

   Copy the text below into the ``/etc/systemd/system/migrator.service`` file. Replace 
   the binary path as needed.

   .. code-block::

      [Unit]
      Description=MongoDB Relational Migrator

      [Service]
      ExecStart="/opt/mongodb-relational-migrator/bin/MongoDB Relational Migrator

      [Install]
      WantedBy=multi-user.target

#. Reload ``systemd`` to read the newly created service.

   .. code-block::

      systemctl daemon-reload

#. Enable the Relational Migrator service to automatically start when the server starts. 

   You can manage the service with the following ``systemctl`` commands: 

   .. code-block::

      systemctl enable migrator.service

      systemctl start migrator.service 


Troubleshooting
---------------

If your installation fails with an error, use the following command to see error details:

.. code-block:: bash

   sudo dpkg -i ./mongodb-relational-migrator_<version_number>-1_amd64.deb

Next Steps
----------

- :ref:`<rm-projects>`