.. _kafka-intro:

==========================================
Integrating Relational Migrator with Kafka
==========================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Relational Migrator uses `Apache Kafka 
<https://www.mongodb.com/docs/kafka-connector/current/introduction/kafka-connect/#apache-kafka>`__ 
as a robust transport layer to migrate data from a source relational database 
to MongoDB. Relational Migrator can be used as a Kafka Connect plugin that 
improves resilience and scalability of big data migration jobs.

Use Cases
---------

Relational Migrator with Kafka is intended for large and long running jobs.
Kafka's built-in resilience ensures the migration job can recover and continue 
running if any component becomes temporarily unavailable. 

Behavior
--------

Relational Migrator works with Kafka as a Kafka Connect sink connector. A 
`Debezium connector <https://debezium.io/documentation/reference/stable/connectors/index.html>`__ 
captures data events from your source database, while Relational Migrator 
interprets and transforms events from the Debezium source and sends them to a 
MongoDB cluster that acts as a data sink.

Architecturally, Relational Migrator is deployed within Kafka as a Kafka 
Connect sink connector. Database events are captured using the open-source 
`Debezium tool <https://debezium.io/documentation/reference/stable/connectors/index.html>`__ 
for database change data capture. A Debezium Connector captures these events 
from your source database. 

.. image:: /img/kafka/kafka-behavior.png
   :alt: Relational Migrator with Kafka

Tasks
-----

You can use the following deployment methods to install Relational Migrator 
with Kafka:

.. list-table::
   :header-rows: 1

   * - Deployment Method
     - Description

   * - :ref:`Install with an Existing Kafka Cluster <install-kafka-cluster>`

     - This deployment method is ideal if you are already running Kafka or 
       have your own approach to installing and configuring Kafka.

   * - :ref:`Install with a Containerized Cluster using Docker <install-docker>`

     - This deployment method is ideal for educational purposes. Use this if you 
       are looking to learn and understand how to configure your own multi-server Kafka
       environment.

   * - :ref:`Install with Confluent Cloud <install-confluent-kafka>` 

     - This deployment method is ideal if you want the reliability of Kafka without 
       having to manage your own cluster. 

Learn More
----------

- `Kafka and Kafka Connect <https://www.mongodb.com/docs/kafka-connector/current/introduction/kafka-connect/>`__
- :ref:`advanced-settings`
- `Debezium <https://debezium.io/documentation/reference/stable/install.html>`__

.. toctree::
   :hidden:
   :titlesonly:

   Use Existing Kafka Cluster </installation/kafka-deployments/install-kafka-cluster>
   Use Containerized Cluster with Docker </installation/kafka-deployments/install-docker>
   Use Confluent Cloud </installation/kafka-deployments/install-confluent-kafka>
   Advanced Kafka Settings </installation/kafka-deployments/advanced-settings>
