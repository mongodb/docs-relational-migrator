.. _create-rule-relational:

============================
Create Rules From Relational
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Creating mapping rules is how you translate your relational tables into
MongoDB collections. You can create mapping rules from either the 
:guilabel:`Relational` or :guilabel:`MongoDB` headers of the schema model pane.

About this Task
---------------

Options available on the :guilabel:`Add mapping` pane depend on the type of 
mapping rule you are adding. For a full overview of each mapping rule 
option see:

- :ref:`New Documents <rm-new-documents>`

- :ref:`Embedded Array <rm-embedded-array>`

- :ref:`Embedded documents <rm-embedded-documents>`

You can also create mapping rules based on a destination MongoDB model. For more 
information, see :ref:`Create Rules to MongoDB <create-rule-mongodb>`.

Steps
-----

1. Open a project.

#. In the left :guilabel:`Schema model` pane, click on a collection under 
   the :guilabel:`Relational` header. 
   
   This prompts the :guilabel:`Mappings` pane to open on the right of the screen.

#. On the :guilabel:`Mappings` pane, click :guilabel:`+ Add` to create a new mapping rule.

#. Define the name of the target MongoDB collection.

#. Define the options for the new mapping rule. When defining the 
   mapping rule, you can:

   - Change the collection name. 
   - Change field names.
   - To include or exclude a field from your migration job, click the
     :icon-fa5:`check-square` icon next to the field name.

#. Optionally, if you want to select a BSON type or set null handling 
   rules for your mapping rule:

   I. Click the :icon-fa5:`chevron-left` icon next to the field 
      you want to customize.

   II. Select a :guilabel:`BSON type`.

   III. Select a :guilabel:`Null handling` option.

   - :guilabel:`Insert as null`: preserves null values, and nulls 
     are inserted into your destination collection.
   - :guilabel:`Omit`: skips any null values, and nulls are not 
     inserted into the destination collection.

   You can view a field's :guilabel:`Original name` and 
   :guilabel:`Original type` in the expanded customized field menu.

   .. note::

      For additional details on field customization and data type conversions,
      see :ref:`field customizations <rm-field-customizations>`.

#. Click :guilabel:`Save and close`.

Learn More
----------

To learn more about managing mapping rules, see:

- :ref:`Edit mapping rules <mapping-rules-edit>`

- :ref:`Delete mapping rules <delete-rules>`

- :ref:`View mapping rules <view-rules>`
