{
  "openapi": "3.0.2",
  "info": {
    "contact": {
      "url": "https://support.mongodb.com/help"
    },
    "description": "OpenAPI specification for MongoDB Relational Migrator tool",
    "title": "MongoDB Relational Migrator REST API",
    "version": "1.9.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8278/api/v1"
    }
  ],
  "paths": {
    "/jobs": {
      "get": {
        "operationId": "getJobs",
        "description": "Get all migration jobs",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Order in which to retrieve the results",
            "required": false,
            "schema": {
              "type": "string",
              "default": "submittedAt,DESC",
              "pattern": "^\\w+,(DESC|ASC)$"
            },
            "example": "submittedAt,DESC"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the results",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 20
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter jobs to only of a specific job type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/migration-jobs-get-type"
            },
            "example": "IN_PROGRESS"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Filter jobs by projectId",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/migration-job-status"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      },
      "post": {
        "operationId": "createJob",
        "description": "Post a new migration job",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post-migration-job-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration-job-status"
                }
              }
            }
          },
          "440": {
            "description": "Invalid as connection string did not contain a database name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "470": {
            "description": "Migration job already running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "operationId": "getJob",
        "description": "Get the status of a migration job by ID",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration-job-status"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/pause": {
      "post": {
        "operationId": "pauseJob",
        "description": "Pause a running migration job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration-job-status"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "465": {
            "description": "Migration job not paused",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/resume": {
      "post": {
        "operationId": "resumeJob",
        "description": "Resume a paused migration job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration-job-status"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "466": {
            "description": "Migration job could not be resumed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/stop": {
      "post": {
        "operationId": "stopJob",
        "description": "Stop a running migration job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/migration-job-status"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/project": {
      "get": {
        "operationId": "getProjects",
        "description": "Get all projects",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Order in which to retrieve the results",
            "required": false,
            "schema": {
              "type": "string",
              "default": "lastModified,DESC",
              "pattern": "^\\w+,(DESC|ASC)$"
            },
            "example": "lastModified,DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project-descriptor-summary"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/project/{projectId}/codegen/generate": {
      "post": {
        "operationId": "generateCode",
        "description": "Generates application code based on your project's mapping rules and schema transformations",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/codegen-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen-response"
                }
              }
            }
          }
        },
        "tags": [
          "Codegen"
        ]
      }
    },
    "/project/{projectId}/codegen/metadata": {
      "get": {
        "operationId": "getCodegenMetadata",
        "description": "Gets the available languages and frameworks for code generation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen-metadata-response"
                }
              }
            }
          }
        },
        "tags": [
          "Codegen"
        ]
      }
    },
    "/project/{projectId}/queries": {
      "get": {
        "operationId": "getQueries",
        "description": "Get a summary of all queries related to a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/query-descriptor-summary"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      },
      "post": {
        "operationId": "createQuery",
        "description": "Create a new adhoc query",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adhoc-query-create-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query-descriptor"
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/project/{projectId}/queries/{queryId}": {
      "delete": {
        "operationId": "deleteQuery",
        "description": "Delete a query by id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      },
      "get": {
        "operationId": "getQuery",
        "description": "Get a query by id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query-details-response"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      },
      "post": {
        "operationId": "convertQuery",
        "description": "Convert a query",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/convert-query-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/query-descriptor"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "492": {
            "description": "No relevant mappings found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "error-response": {
        "type": "object",
        "properties": {
          "jobId": {
            "$ref": "#/components/schemas/id"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "required": [
          "message",
          "timestamp"
        ]
      },
      "id": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\-]+$"
      },
      "jdbc-connection-details": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/database-type"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "url"
        ]
      },
      "mongodb-connection-details": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "connectionString": {
            "type": "string"
          },
          "projectId": {
            "description": "Atlas projectId",
            "type": "string"
          },
          "projectName": {
            "description": "Atlas project name",
            "type": "string"
          },
          "clusterName": {
            "description": "Atlas cluster name",
            "type": "string"
          },
          "hasTimeSeriesCollection": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false,
        "required": [
          "connectionString"
        ]
      },
      "migration-jobs-get-type": {
        "type": "string",
        "enum": [
          "IN_PROGRESS"
        ]
      },
      "migration-job-status": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "projectId": {
            "$ref": "#/components/schemas/id"
          },
          "status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "FAILED",
              "CANCELLING",
              "CANCELLED",
              "COMPLETED",
              "CLEANING_UP"
            ]
          },
          "cdcStatus": {
            "type": "string",
            "default": "NOT_STARTED",
            "enum": [
              "NOT_STARTED",
              "RUNNING",
              "COMPLETING",
              "COMPLETED",
              "FAILED",
              "CANCELLED",
              "PAUSED"
            ]
          },
          "verificationJobId": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/migration-job-descriptor-options"
          },
          "jdbcConnectionString": {
            "type": "string"
          },
          "mongoDbConnectionString": {
            "type": "string"
          },
          "atlasMetadata": {
            "$ref": "#/components/schemas/migration_job_status_atlasMetadata"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time"
          },
          "statistics": {
            "$ref": "#/components/schemas/migration-job-statistics"
          },
          "cdcStatistics": {
            "$ref": "#/components/schemas/cdc-job-statistics"
          },
          "jobUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/job-update"
            }
          },
          "failureError": {
            "$ref": "#/components/schemas/failureError"
          },
          "metadata": {
            "$ref": "#/components/schemas/migration_job_status_metadata"
          },
          "relationalTableFilters": {
            "$ref": "#/components/schemas/relational-table-filters"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "options",
          "projectId",
          "status",
          "submittedAt"
        ]
      },
      "post-migration-job-request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "jdbcConnectionDetails": {
            "$ref": "#/components/schemas/jdbc-connection-details"
          },
          "mongodbConnectionDetails": {
            "$ref": "#/components/schemas/mongodb-connection-details"
          },
          "options": {
            "$ref": "#/components/schemas/migration-job-descriptor-options"
          },
          "verification": {
            "$ref": "#/components/schemas/migration-verification"
          },
          "relationalTableFilters": {
            "$ref": "#/components/schemas/relational-table-filters"
          }
        },
        "additionalProperties": false,
        "required": [
          "jdbcConnectionDetails",
          "mongodbConnectionDetails",
          "options",
          "projectId",
          "verification"
        ]
      },
      "project-descriptor-summary": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "jdbcId": {
            "$ref": "#/components/schemas/id"
          },
          "mongodbId": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1
          },
          "type": {
            "$ref": "#/components/schemas/database-type"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "codegen-request": {
        "type": "object",
        "properties": {
          "collections": {
            "description": "MongoDB collections to include in generated code",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeSupportFiles": {
            "description": "Whether to include support files, if applicable for the selected language and framework",
            "type": "boolean"
          },
          "language": {
            "$ref": "#/components/schemas/codegen-language-type"
          },
          "framework": {
            "$ref": "#/components/schemas/codegen-framework-type"
          }
        },
        "additionalProperties": false,
        "required": [
          "collections",
          "framework",
          "includeSupportFiles",
          "language"
        ]
      },
      "codegen-response": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/codegen-language-type"
          },
          "framework": {
            "$ref": "#/components/schemas/codegen-framework-type"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/codegen_response_files_inner"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "files",
          "framework",
          "language"
        ]
      },
      "codegen-metadata-response": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/codegen_metadata_response_metadata_inner"
            }
          }
        },
        "required": [
          "metadata"
        ]
      },
      "migration-job-statistics-preview": {
        "type": "object",
        "properties": {
          "totalTableCount": {
            "type": "integer"
          },
          "totalEvents": {
            "type": "integer",
            "format": "int64"
          },
          "totalEventSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "query-descriptor-summary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "inputQuery": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "queryType": {
            "$ref": "#/components/schemas/query-input-type"
          },
          "queryStatus": {
            "$ref": "#/components/schemas/query-output-status"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/convert-query-language-type"
          }
        },
        "required": [
          "id",
          "inputQuery",
          "projectId",
          "queryStatus",
          "queryType"
        ]
      },
      "adhoc-query-create-request": {
        "type": "object",
        "properties": {
          "inputQuery": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "query-descriptor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/query-input"
          },
          "output": {
            "$ref": "#/components/schemas/query-output"
          }
        },
        "required": [
          "id",
          "input",
          "output",
          "projectId"
        ]
      },
      "query-details-response": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/query-descriptor"
          },
          "convertedRunResult": {
            "$ref": "#/components/schemas/query-run-result"
          },
          "sourceRunResult": {
            "$ref": "#/components/schemas/query-run-result-source"
          }
        },
        "required": [
          "query"
        ]
      },
      "convert-query-request": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/convert-query-language-type"
          }
        },
        "additionalProperties": false,
        "required": [
          "language"
        ]
      },
      "query-run-result-page": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "pageNumber": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "hasMore": {
            "type": "boolean"
          }
        },
        "required": [
          "data",
          "hasMore",
          "pageNumber",
          "pageSize",
          "total"
        ]
      },
      "query-run-result": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "executionTimeMs": {
            "type": "number"
          },
          "result": {
            "$ref": "#/components/schemas/query-run-result-page"
          },
          "error": {
            "type": "string"
          },
          "logs": {
            "$ref": "#/components/schemas/query-run-logs"
          }
        },
        "required": [
          "id",
          "projectId"
        ]
      },
      "query-run-result-source": {
        "allOf": [
          {
            "$ref": "#/components/schemas/query-run-result"
          },
          {
            "additionalProperties": false,
            "properties": {
              "fieldMetadataMap": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/query_run_result_source_allOf_fieldMetadataMap"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "database-type": {
        "type": "string",
        "enum": [
          "ORACLE",
          "SQL_SERVER",
          "MYSQL",
          "POSTGRESQL",
          "DB2",
          "SYBASE"
        ]
      },
      "migration-job-descriptor-options": {
        "type": "object",
        "properties": {
          "dropCollections": {
            "type": "boolean",
            "default": false
          },
          "mode": {
            "$ref": "#/components/schemas/migration-mode"
          },
          "errorHandling": {
            "type": "string",
            "default": "FAIL",
            "enum": [
              "FAIL",
              "WARN",
              "SKIP"
            ]
          },
          "errorTolerance": {
            "description": "The number of failures (on the record level) that should be tolerated before terminating the migration.\nThe value is strictly greater than or equal to.\n",
            "type": "integer",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "required": [
          "mode"
        ]
      },
      "migration-job-statistics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/migration-job-statistics-details"
          },
          {
            "$ref": "#/components/schemas/migration-job-statistics-preview"
          }
        ]
      },
      "cdc-job-statistics": {
        "type": "object",
        "properties": {
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastEventTime": {
            "type": "string",
            "format": "date-time"
          },
          "eventsInLastHour": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "eventsInLastMinute": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "totalEventsSeen": {
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        },
        "additionalProperties": false
      },
      "job-update": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "enum": [
              "DB_SETUP_ERROR",
              "ERROR",
              "WARNING",
              "INFO"
            ]
          },
          "stage": {
            "type": "string",
            "enum": [
              "SNAPSHOTTING",
              "STREAMING",
              "VERIFICATION"
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "$ref": "#/components/schemas/job_update_location"
          }
        },
        "required": [
          "eventType",
          "message",
          "timestamp"
        ]
      },
      "failureError": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "failureAt": {
            "type": "string",
            "format": "date-time"
          },
          "setupError": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false,
        "required": [
          "errorType",
          "failureAt",
          "message",
          "setupError"
        ]
      },
      "verification-status-enum": {
        "type": "string",
        "enum": [
          "VERIFYING",
          "FAILED",
          "CANCELLING",
          "CANCELLED",
          "VERIFIED",
          "ABORTED"
        ]
      },
      "relational-table-filters": {
        "description": "Schema",
        "type": "object",
        "additionalProperties": {
          "additionalProperties": {
            "$ref": "#/components/schemas/table-filter"
          },
          "description": "Table",
          "type": "object"
        }
      },
      "migration-verification": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled"
        ]
      },
      "codegen-language-type": {
        "type": "string",
        "enum": [
          "JAVA",
          "CSHARP",
          "JAVASCRIPT",
          "JSON",
          "PYTHON"
        ]
      },
      "codegen-framework-type": {
        "type": "string",
        "enum": [
          "POJO",
          "POCO",
          "SPRING_DATA",
          "PERSISTENCE_LAYER",
          "MONGOOSE_SCHEMAS",
          "NODE",
          "MONGODB_JSON_SCHEMA",
          "STANDARD_JSON_SCHEMA",
          "JSON_EXAMPLE_SCHEMA",
          "PYTHON_TYPED_DICT_CLASSES"
        ]
      },
      "codegen-filetype-type": {
        "type": "string",
        "enum": [
          "ENTITY",
          "REPOSITORY",
          "SUPPORT"
        ]
      },
      "query-input-type": {
        "type": "string",
        "enum": [
          "STORED_PROCEDURE",
          "TRIGGER",
          "VIEW",
          "USER_QUERY"
        ]
      },
      "query-output-status": {
        "type": "string",
        "enum": [
          "NOT_STARTED",
          "RUNNING",
          "FAILED",
          "COMPLETED"
        ]
      },
      "convert-query-language-type": {
        "type": "string",
        "enum": [
          "JAVA",
          "CSHARP",
          "JAVASCRIPT"
        ]
      },
      "query-input": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "runScriptTemplate": {
            "type": "string"
          },
          "queryType": {
            "$ref": "#/components/schemas/query-input-type"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "query",
          "queryType"
        ]
      },
      "query-output": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/query-output-status"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "$ref": "#/components/schemas/convert-query-language-type"
          },
          "errorMessage": {
            "type": "string"
          },
          "modified": {
            "type": "boolean"
          },
          "runScriptTemplate": {
            "type": "string"
          },
          "functionName": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "query",
          "status"
        ]
      },
      "query-run-logs": {
        "type": "object",
        "properties": {
          "stdout": {
            "type": "string"
          },
          "stderr": {
            "type": "string"
          }
        },
        "required": [
          "stderr",
          "stdout"
        ]
      },
      "migration-mode": {
        "type": "string",
        "enum": [
          "SNAPSHOT",
          "CDC",
          "CDC_ONLY"
        ]
      },
      "migration-job-statistics-details": {
        "type": "object",
        "properties": {
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "elapsedSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "remainingTableCount": {
            "type": "integer"
          },
          "processingTables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalEventsSeen": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "snapshotCompleted": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "tableLocation": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string"
          }
        },
        "required": [
          "table"
        ]
      },
      "collectionLocation": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string"
          }
        },
        "required": [
          "collection"
        ]
      },
      "documentLocation": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string"
          },
          "document": {
            "type": "string"
          }
        },
        "required": [
          "collection",
          "document"
        ]
      },
      "table-filter": {
        "type": "object",
        "properties": {
          "whereClause": {
            "type": "string"
          },
          "rowCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "migration_job_status_atlasMetadata": {
        "type": "object",
        "properties": {
          "mongoDbProjectName": {
            "type": "string"
          },
          "mongoDbProjectId": {
            "type": "string"
          },
          "mongoDbClusterName": {
            "type": "string"
          }
        }
      },
      "migration_job_status_metadata": {
        "type": "object",
        "properties": {
          "telemetryUserId": {
            "type": "string"
          },
          "verificationRequested": {
            "type": "boolean",
            "default": false
          },
          "verificationStatus": {
            "$ref": "#/components/schemas/verification-status-enum"
          }
        },
        "additionalProperties": false
      },
      "codegen_response_files_inner": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filetype": {
            "$ref": "#/components/schemas/codegen-filetype-type"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "filetype",
          "name"
        ]
      },
      "codegen_metadata_response_metadata_inner_frameworks_inner": {
        "type": "object",
        "properties": {
          "hasSupportFiles": {
            "type": "boolean"
          },
          "framework": {
            "$ref": "#/components/schemas/codegen-framework-type"
          }
        },
        "required": [
          "framework",
          "hasSupportFiles"
        ]
      },
      "codegen_metadata_response_metadata_inner": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/codegen-language-type"
          },
          "frameworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/codegen_metadata_response_metadata_inner_frameworks_inner"
            }
          }
        },
        "required": [
          "frameworks",
          "language"
        ]
      },
      "query_run_result_source_allOf_fieldMetadataMap": {
        "type": "object",
        "properties": {
          "columnType": {
            "type": "string"
          },
          "columnIndex": {
            "type": "integer"
          }
        },
        "required": [
          "columnIndex",
          "columnType"
        ]
      },
      "job_update_location": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/tableLocation"
          },
          {
            "$ref": "#/components/schemas/collectionLocation"
          },
          {
            "$ref": "#/components/schemas/documentLocation"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Code generation based on project mappings",
      "name": "Codegen"
    },
    {
      "description": "Data migration",
      "name": "Job"
    },
    {
      "description": "Captures relational schemas and mappings",
      "name": "Project"
    },
    {
      "description": "Query conversion",
      "name": "Query"
    }
  ]
}